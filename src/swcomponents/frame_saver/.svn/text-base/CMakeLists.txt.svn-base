cmake_minimum_required(VERSION 2.4.6)
include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake)

# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
set(ROS_BUILD_TYPE RelWithDebInfo)

rosbuild_init()

find_package(
  CoViS
  REQUIRED
  HINTS $ENV{HOME}/CoViS $ENV{HOME}/Code/CoViS $ENV{HOME}/workspace/CoViS ../../../CoViS)

INCLUDE_DIRECTORIES( ${COVIS_INCLUDE_DIR} )
LINK_DIRECTORIES( ${COVIS_LIBRARY_DIRS} )

#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set the default path for built libraries to the "lib" directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

#uncomment if you have defined messages
#rosbuild_genmsg()
#uncomment if you have defined services
#rosbuild_gensrv()



# Put this line before the executable or library:
rosbuild_add_boost_directories()

rosbuild_add_executable(frame_saver src/frameSaver.cpp)
target_link_libraries(frame_saver ${COVIS_LIBRARIES})
rosbuild_link_boost(frame_saver signals)

rosbuild_add_executable(frame_saver_intellAct src/frameSaver_intellAct.cpp)
target_link_libraries(frame_saver_intellAct ${COVIS_LIBRARIES})

rosbuild_add_executable(frame_saver2 src/frameSaver2.cpp)
target_link_libraries(frame_saver2 ${COVIS_LIBRARIES})
rosbuild_link_boost(frame_saver2 signals)

rosbuild_add_executable(frame_saver3 src/frameSaver3.cpp)
target_link_libraries(frame_saver3 ${COVIS_LIBRARIES})
rosbuild_link_boost(frame_saver3 signals)

rosbuild_add_executable(stereo_frame_saver src/stereoFrameSaver.cpp)
target_link_libraries(stereo_frame_saver ${COVIS_LIBRARIES})
rosbuild_link_boost(stereo_frame_saver filesystem)

rosbuild_add_executable(cloud_frame_saver src/cloudFrameSaver.cpp)
target_link_libraries(cloud_frame_saver ${COVIS_LIBRARIES})
rosbuild_link_boost(cloud_frame_saver filesystem)

#rosbuild_add_executable(cloud_merger src/cloudMerger.cpp)
#target_link_libraries(cloud_merger ${COVIS_LIBRARIES})
#rosbuild_link_boost(cloud_merger filesystem)
