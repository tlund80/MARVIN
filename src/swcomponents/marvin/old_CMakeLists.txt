cmake_minimum_required(VERSION 2.4.6)
include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake)

# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
#set(ROS_BUILD_TYPE RelWithDebInfo)

rosbuild_init()
SET(CMAKE_BUILD_TYPE Release)
SET(RW_ROOT "$ENV{RW_ROOT}")
SET(RWHW_ROOT "$ENV{RWHW_ROOT}")
#Include default settings for constructing a robwork dependent project

#Include default settings for constructing a robwork dependent project
#FIND_PACKAGE(
#  RobWork
#  QUIET
#  HINTS
#    "${RW_ROOT}")
#The following is a workaround for the old version of RobWork. Remove once no longer needed (everyone switched to a RobWork version newer than April 2012)
#IF(NOT ROBWORK_FOUND)
#  INCLUDE(${RW_ROOT}/build/FindRobWork.cmake)
#ENDIF(NOT ROBWORK_FOUND)


SET(CMAKE_MODULE_PATH ${RW_ROOT}/build ${RWHW_ROOT}/build ${CMAKE_MODULE_PATH})
FIND_PACKAGE(RobWork)
FIND_PACKAGE(RobWorkHardware COMPONENTS universalrobots netft)

INCLUDE_DIRECTORIES( ${ROBWORK_INCLUDE_DIR} ${ROBWORKHARDWARE_INCLUDE_DIRS})
LINK_DIRECTORIES( ${ROBWORK_LIBRARY_DIRS} ${ROBWORKHARDWARE_LIBRARY_DIRS})


#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set the default path for built libraries to the "lib" directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

rosbuild_add_executable(jsi src/main.cpp src/PiH.cpp src/DataCollector.cpp src/DMPstructure.cpp src/pythag.c src/svbksb.c src/svdcmp.c src/utility.c)
TARGET_LINK_LIBRARIES(jsi ${ROBWORKHARDWARE_LIBRARIES} ${ROBWORK_LIBRARIES}  )

#uncomment if you have defined messages
#rosbuild_genmsg()
#uncomment if you have defined services
#rosbuild_gensrv()

#common commands for building c++ executables and libraries
#rosbuild_add_library(${PROJECT_NAME} src/example.cpp)
#target_link_libraries(${PROJECT_NAME} another_library)
#rosbuild_add_boost_directories()
#rosbuild_link_boost(${PROJECT_NAME} thread)
#rosbuild_add_executable(example examples/example.cpp)
#target_link_libraries(example ${PROJECT_NAME})
