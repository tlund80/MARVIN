<launch>
   <!-- Make sure that depth registration is turned on by default
   by overriding the default of the openni_launch parameter 'depth_registration'.
   This parameter should be used from the command line for this package instead. -->
   <arg name="depth_reg" default="true" />
   <!-- Optionally suppress loading the driver nodelet -->
   <arg name="load_camera_driver" default="true" />
   
   <!-- Include the openni_launch main script -->
   <include file="$(find openni_launch)/launch/openni.launch">
      <!-- Namespace -->
      <arg name="camera" value="kinect_right" />
      
      <!-- RGB frame ID -->
      <arg name="rgb_frame_id" value="/kinect_right" />
      
      <!-- Device ID -->
      <arg name="device_id" value="A00366802050045A" />
      
      <!-- Calibration files -->
      <arg name="rgb_camera_info_url"   value="package://openni_launch_marvin/camera_info_kinect_right_rgb.yaml" />
      <arg name="depth_camera_info_url" value="" />
      
      <!-- Depth registration -->
      <arg name="depth_registration" value="$(arg depth_reg)" />
      
      <!-- Optionally suppress loading the driver nodelet and/or publishing the default tf tree. Useful if you are playing back recorded raw data from a bag, or are supplying a more accurate tf tree from calibration. -->
      <arg name="load_driver" value="$(arg load_camera_driver)" />
      <arg name="publish_tf" default="false" />
   </include>
   
   <!-- Load extrinsics -->
   <rosparam command="load" file="$(find openni_launch_marvin)/position_kinect_right.yaml" ns="kinect_right" />
   
   <!-- Publish global extrinsic calibration -->
   <param name="/kinect_right/source" value="/world" />
   <param name="/kinect_right/rate" value="30" />
   <node pkg="openni_launch_marvin" type="broadcaster" name="kinect_right" />
</launch>
